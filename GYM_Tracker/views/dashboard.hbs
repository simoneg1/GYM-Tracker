<div class="navbar">
    <h1>GYM Tracker</h1>
    <div class="user-info">
        <!-- Inizio aggiunta contatore utenti online -->
        <div class="online-counter">
            <div class="online-indicator pulse-animation"></div>
            <span>Online: <span id="online-users-count">0</span></span>
        </div>
        <!-- Fine aggiunta contatore utenti online -->
        <span>{{user.nome}} {{user.cognome}} ({{user.tipo}})</span>
        <button id="logoutBtn" class="logout-btn">Logout</button>
    </div>
</div>

<div class="dashboard-container">
    <div class="sidebar">
        <nav>
            <ul>
                <li><a href="#" class="active" data-section="overview">Dashboard</a></li>
                <li><a href="#" data-section="exercises">Esercizi</a></li>
                <li><a href="#" data-section="workouts">Allenamenti</a></li>
                <li><a href="#" data-section="progress">Progressi</a></li>
                <li><a href="#" data-section="profile">Profilo</a></li>
        
            </ul>
        </nav>
    </div>

    <div class="main-content">
        <section id="overview" class="dashboard-section active">
            <h2>Benvenuto, {{user.nome}}!</h2>
            <p>Questa è la tua dashboard personale. Da qui potrai accedere a tutte le funzionalità del sistema.</p>
            
            <div class="user-details">
                <h3>I tuoi dati:</h3>
                <ul>
                    <li><strong>Nome:</strong> {{user.nome}} {{user.cognome}}</li>
                    <li><strong>Email:</strong> {{user.email}}</li>
                    <li><strong>Tipo account:</strong> {{user.tipo}}</li>
                    <li><strong>Età:</strong> {{user.eta}} anni</li>
                    <li><strong>Peso:</strong> {{user.peso}} kg</li>
                    <li><strong>Altezza:</strong> {{user.altezza}} cm</li>
                </ul>
            </div>
            
            <div class="stats-grid">
                <div class="stat-card">
                    <h3>Allenamenti</h3>
                    <div class="stat-number">0</div>
                    <p>Allenamenti completati</p>
                </div>
                
                <div class="stat-card">
                    <h3>Progressi</h3>
                    <div class="stat-number">0</div>
                    <p>Settimane di allenamento</p>
                </div>
                
                <div class="stat-card">
                    <h3>Esercizi</h3>
                    <div class="stat-number">0</div>
                    <p>Esercizi preferiti</p>
                </div>
            </div>
        </section>

        <section id="exercises" class="dashboard-section">
            <h2>Catalogo Esercizi</h2>
            <p>Qui troverai tutti gli esercizi disponibili per il tuo allenamento.</p>
            
            <!-- Pulsanti per le richieste AJAX -->
            <div class="exercise-buttons">
                <button id="btnAllExercises" class="btn">Visualizza tutti gli esercizi</button>
                <button id="btnChestExercises" class="btn">Esercizi per il petto</button>
            </div>
            
            <!-- Container per visualizzare i risultati -->
            <div id="exercise-results" class="exercise-results"></div>
        </section>

        <section id="workouts" class="dashboard-section">
            <h2>I Tuoi Allenamenti</h2>
            <p>Visualizza e gestisci i tuoi programmi di allenamento.</p>
            <!-- Contenuto degli allenamenti andrà qui -->
        </section>

        <section id="progress" class="dashboard-section">
            <h2>Traccia i Tuoi Progressi</h2>
            <p>Visualizza i tuoi progressi nel tempo.</p>
            <!-- Grafici e statistiche andranno qui -->
        </section>

        <section id="profile" class="dashboard-section">
            <h2>Il Tuo Profilo</h2>
            <div class="profile-details">
                <div class="form-group">
                    <label>Email:</label>
                    <input type="email" value="{{user.email}}" disabled>
                </div>
                <div class="form-group">
                    <label>Nome:</label>
                    <input type="text" value="{{user.nome}}">
                </div>
                <div class="form-group">
                    <label>Cognome:</label>
                    <input type="text" value="{{user.cognome}}">
                </div>
                <div class="form-group">
                    <label>Tipo account:</label>
                    <select>
                        <option value="Atleta" {{#if (eq user.tipo "Atleta")}}selected{{/if}}>Atleta</option>
                        <option value="Personal Trainer" {{#if (eq user.tipo "Personal Trainer")}}selected{{/if}}>Personal Trainer</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>Età:</label>
                    <input type="number" value="{{user.eta}}" min="1">
                </div>
                <div class="form-group">
                    <label>Peso (kg):</label>
                    <input type="number" value="{{user.peso}}" min="1" step="0.1">
                </div>
                <div class="form-group">
                    <label>Altezza (cm):</label>
                    <input type="number" value="{{user.altezza}}" min="1" step="0.1">
                </div>
                <button class="update-btn">Aggiorna Profilo</button>
            </div>
        </section>
    </div>
</div>

<style>
/* Stili per la sezione esercizi */
.exercise-buttons {
    margin-bottom: 20px;
    display: flex;
    gap: 10px;
}

.exercise-buttons .btn {
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    background-color: #3498db;
    color: white;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.3s;
}

.exercise-buttons .btn:hover {
    background-color: #2980b9;
}

.loader {
    text-align: center;
    padding: 20px;
    font-weight: bold;
    color: #666;
}

.exercise-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
}

.exercise-card {
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
    overflow: hidden;
    transition: transform 0.3s, box-shadow 0.3s;
    padding: 20px;
    position: relative;
}

.exercise-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 16px rgba(0,0,0,0.15);
}

.exercise-card h3 {
    color: #333;
    margin-top: 0;
    border-bottom: 2px solid #f1f1f1;
    padding-bottom: 10px;
    font-size: 18px;
    text-transform: capitalize;
}

.exercise-card .badge {
    display: inline-block;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    font-weight: bold;
    margin-right: 5px;
    margin-bottom: 5px;
    color: white;
}

.badge.beginner { background-color: #2ecc71; }
.badge.intermediate { background-color: #f39c12; }
.badge.expert { background-color: #e74c3c; }

.badge.muscle { background-color: #3498db; }
.badge.type { background-color: #9b59b6; }
.badge.equipment { background-color: #34495e; }

.exercise-card .info-section {
    margin-bottom: 15px;
}

.exercise-card .info-section h4 {
    margin: 0 0 5px 0;
    font-size: 14px;
    color: #555;
}

.exercise-card .instruction-section {
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px solid #f1f1f1;
    max-height: 200px;
    overflow-y: auto;
}

.exercise-card .instruction-section h4 {
    margin: 0 0 10px 0;
    color: #555;
}

.exercise-card .instruction-section p {
    line-height: 1.6;
    color: #666;
    font-size: 14px;
}

.notice {
    padding: 20px;
    background-color: #f8f9fa;
    border-radius: 5px;
    text-align: center;
    color: #666;
}

.error {
    padding: 20px;
    background-color: #fee;
    border-radius: 5px;
    text-align: center;
    color: #e74c3c;
}

/* Stili per il contatore utenti online */
.online-counter {
    display: flex;
    align-items: center;
    margin-right: 20px;
    background-color: rgba(0, 0, 0, 0.2);
    padding: 5px 12px;
    border-radius: 20px;
    font-size: 14px;
    transition: all 0.3s ease;
}

.online-counter:hover {
    background-color: rgba(0, 0, 0, 0.3);
    transform: translateY(-2px);
}

.online-indicator {
    width: 10px;
    height: 10px;
    background-color: #10B981;
    border-radius: 50%;
    margin-right: 8px;
}

#online-users-count {
    font-weight: bold;
    margin-left: 4px;
}

@keyframes pulse {
    0% { opacity: 0.5; }
    50% { opacity: 1; }
    100% { opacity: 0.5; }
}

.pulse-animation {
    animation: pulse 1.5s infinite;
}

/* Animazione per il contatore quando viene aggiornato */
@keyframes counterPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); color: #4ade80; }
    100% { transform: scale(1); }
}

.counter-updated {
    animation: counterPulse 0.7s ease-in-out;
}
</style>

<!-- Importa Socket.IO prima degli altri script -->
<script src="/socket.io/socket.io.js"></script>

<!-- Script aggiornato per il contatore -->
<script>
// Script isolato per il contatore utenti online
(function() {
    // Inizializza Socket.IO
    const socket = io();
    const counterElement = document.getElementById('online-users-count');
    
    // Richiedi esplicitamente il conteggio all'avvio
    socket.on('connect', function() {
        console.log("Socket connesso, richiedo conteggio utenti");
        // Breve timeout per assicurarsi che il server abbia registrato la connessione
        setTimeout(function() {
            socket.emit('request-count');
        }, 500);
    });
    
    // Aggiorna il contatore quando riceve aggiornamenti
    socket.on('user-counter-update', function(data) {
        console.log("Ricevuto aggiornamento contatore:", data);
        if (counterElement && data && typeof data.count !== 'undefined') {
            // Applica un'animazione al cambio di numero
            counterElement.classList.add('counter-updated');
            counterElement.textContent = data.count;
            
            // Rimuovi la classe di animazione dopo l'effetto
            setTimeout(function() {
                counterElement.classList.remove('counter-updated');
            }, 700);
        }
    });
    
    // Invia un heartbeat periodico per mantenere la connessione
    setInterval(function() {
        socket.emit('heartbeat');
    }, 30000);
    
    // Gestisci riconnessione
    socket.on('reconnect', function() {
        console.log("Riconnesso, richiedo nuovo conteggio");
        socket.emit('request-count');
    });
})();
</script>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Riferimenti ai pulsanti
    const btnAllExercises = document.getElementById('btnAllExercises');
    const btnChestExercises = document.getElementById('btnChestExercises');
    const resultContainer = document.getElementById('exercise-results');
    
    // Configurazione API
    const apiKey = 'MVi0MTdd5DNbPt4ZG2kA+w==LBPZw114n7FmMhsG';
    const apiUrl = 'https://api.api-ninjas.com/v1/exercises';
    
    // Gestione click per tutti gli esercizi
    btnAllExercises.addEventListener('click', function() {
        // Mostra un loader
        resultContainer.innerHTML = '<div class="loader">Caricamento esercizi...</div>';
        
        // Chiamata AJAX per tutti gli esercizi
        fetch(apiUrl, {
            method: 'GET',
            headers: {
                'X-Api-Key': apiKey,
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Errore nel caricamento degli esercizi');
            }
            return response.json();
        })
        .then(data => {
            displayExercises(data);
        })
        .catch(error => {
            resultContainer.innerHTML = '<div class="error">Errore durante il caricamento degli esercizi.</div>';
            console.error('Errore:', error);
        });
    });
    
    // Gestione click per esercizi del petto
    btnChestExercises.addEventListener('click', function() {
        // Mostra un loader
        resultContainer.innerHTML = '<div class="loader">Caricamento esercizi per il petto...</div>';
        
        // Chiamata AJAX per esercizi del petto
        fetch(`${apiUrl}?muscle=chest`, {
            method: 'GET',
            headers: {
                'X-Api-Key': apiKey,
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Errore nel caricamento degli esercizi');
            }
            return response.json();
        })
        .then(data => {
            displayExercises(data);
        })
        .catch(error => {
            resultContainer.innerHTML = '<div class="error">Errore durante il caricamento degli esercizi.</div>';
            console.error('Errore:', error);
        });
    });
    
    // Funzione per visualizzare gli esercizi
    function displayExercises(exercises) {
        if (!exercises || exercises.length === 0) {
            resultContainer.innerHTML = '<div class="notice">Nessun esercizio trovato.</div>';
            return;
        }
        
        let html = '<div class="exercise-grid">';
        
        exercises.forEach(exercise => {
            // Definisci la classe del badge in base alla difficoltà
            let difficultyClass = '';
            switch(exercise.difficulty.toLowerCase()) {
                case 'beginner':
                    difficultyClass = 'beginner';
                    break;
                case 'intermediate':
                    difficultyClass = 'intermediate';
                    break;
                case 'expert':
                    difficultyClass = 'expert';
                    break;
                default:
                    difficultyClass = 'intermediate';
            }
            
            html += `
                <div class="exercise-card">
                    <h3>${exercise.name}</h3>
                    
                    <div class="badge-container">
                        <span class="badge ${difficultyClass}">${exercise.difficulty}</span>
                        <span class="badge muscle">${exercise.muscle}</span>
                        <span class="badge type">${exercise.type}</span>
                        <span class="badge equipment">${exercise.equipment}</span>
                    </div>
                    
                    <div class="instruction-section">
                        <h4>Istruzioni:</h4>
                        <p>${exercise.instructions}</p>
                    </div>
                </div>
            `;
        });
        
        html += '</div>';
        resultContainer.innerHTML = html;
    }
});
</script>

<script src="/js/dashboard.js"></script>